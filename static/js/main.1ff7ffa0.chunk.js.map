{"version":3,"sources":["OpenCV.js","FaceDetection.js","App.js","index.js"],"names":["cv","window","OpenCV","img","file","canvas","console","log","this","image","document","getElementById","prototype","addListener","addEventListener","loadData","bind","e","target","files","src","URL","createObjectURL","loadImageToCanvas","removeListener","removeEventListener","negativeCanvas","loadOriginalCanvas","ctx","getContext","imgData","getImageData","width","height","arr","data","i","length","putImageData","logTransform","Math","log10","flip","flipH","flipV","scaleH","scaleV","posX","posY","save","scale","drawImage","restore","contrastCanvas","value","contrast","intercept","brightnessCanvas","brightness","filter","onload","grayscale","mat","imread","cvtColor","COLOR_RGB2GRAY","imshow","delete","dst","Mat","M","eye","CV_32FC1","anchor","Point","filter2D","CV_8U","BORDER_DEFAULT","cannyEdgeDetection","Canny","houghLineTransformation","zeros","rows","cols","CV_8UC3","lines","COLOR_RGBA2GRAY","HoughLines","PI","rho","data32F","theta","a","cos","b","sin","x0","y0","startPoint","x","y","endPoint","line","dft","optimalRows","getOptimalDFTSize","optimalCols","s0","Scalar","all","padded","copyMakeBorder","BORDER_CONSTANT","plane0","convertTo","CV_32F","planes","MatVector","complexI","plane1","push_back","merge","split","magnitude","get","mag","m1","ones","type","add","rect","Rect","cx","roi","cy","tmp","rect0","rect1","rect2","rect3","q0","q1","q2","q3","copyTo","normalize","NORM_MINMAX","otsu","threshold","THRESH_OTSU","blurByAveraging","ksize","Size","blur","gaussianBlur","GaussianBlur","medianBlurring","medianBlur","negative","mat_not","bitwise_not","histogram","srcVec","histSize","hist","mask","color","calcHist","max","minMaxLoc","maxVal","binVal","point1","point2","rectangle","FILLED","crop","action","style","display","flexDirection","justifyContent","alignItems","VideoJSX","props","id","autoPlay","muted","onClick","goBack","fontSize","fontFamily","cursor","FaceDetection","startDetection","React","Component","video","Promise","faceapi","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","navigator","getUserMedia","stream","srcObject","err","error","setAttribute","append","displaySize","setInterval","detections","resizedDetections","clearRect","drawDetections","App","handleChange","setState","detect_faces","ocv","handleSlider","state","AppJSX","className","min","onChange","map","item","index","key","name","ReactDOM","render"],"mappings":"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","file":"static/js/main.1ff7ffa0.chunk.js","sourcesContent":["\n// console.log(cv)\nlet cv = window.cv;\n\nfunction OpenCV(img, file, canvas) {\n  console.log(cv);\n  this.image = document.getElementById(img);\n  this.file = document.getElementById(file);\n  this.canvas = canvas;\n}\n\nOpenCV.prototype.addListener = function() {\n  this.file.addEventListener(\"change\", this.loadData.bind(this), false);\n};\n\nOpenCV.prototype.loadData = function(e) {\n  if (e.target.files[0]) {\n    this.image.src = URL.createObjectURL(e.target.files[0]);\n    this.loadImageToCanvas();\n  }\n};\n\nOpenCV.prototype.removeListener = function() {\n  this.file.removeEventListener(\"change\", this.loadData.bind(this), false);\n};\n\n// image enhancement and restoration\n\n//canvas techniques\n\nOpenCV.prototype.negativeCanvas = function() {\n  this.loadOriginalCanvas();\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  let arr = imgData.data;\n  for (let i = 0; i < arr.length; i = i + 4) {\n    arr[i] = 255 - arr[i]; //red\n    arr[i + 1] = 255 - arr[i + 1]; //green\n    arr[i + 2] = 255 - arr[i + 2]; //blue\n  }\n  // imgData.data = arr;\n  ctx.putImageData(imgData, 0, 0);\n};\n\nOpenCV.prototype.logTransform = function() {\n  this.loadOriginalCanvas();\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  let arr = imgData.data;\n  for (let i = 0; i < arr.length; i = i + 4) {\n    arr[i] = 200 * Math.log10(arr[i] + 1); //red\n    arr[i + 1] = 200 * Math.log10(arr[i + 1] + 1); //green\n    arr[i + 2] = 200 * Math.log10(arr[i + 2] + 1); //blue\n  }\n  // imgData.data = arr;\n  ctx.putImageData(imgData, 0, 0);\n};\n\nOpenCV.prototype.flip = function(flipH, flipV) {\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  let width = canvas.width;\n  let height = canvas.height;\n  let scaleH = flipH ? -1 : 1; // Set horizontal scale to -1 if flip horizontal\n  let scaleV = flipV ? -1 : 1; // Set verical scale to -1 if flip vertical\n  let posX = flipH ? width * -1 : 0; // Set x position to -100% if flip horizontal\n  let posY = flipV ? height * -1 : 0; // Set y position to -100% if flip vertical\n\n  ctx.save(); // Save the current state\n  ctx.scale(scaleH, scaleV); // Set scale to flip the image\n  ctx.drawImage(this.image, posX, posY, width, height); // draw the image\n  ctx.restore(); // Restore the last saved state\n};\n\nOpenCV.prototype.contrastCanvas = function(value) {\n  this.loadOriginalCanvas();\n  let contrast = value;\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  let arr = imgData.data;\n  contrast = contrast / 100 + 1; //convert to decimal & shift range: [0..2]\n  let intercept = 128 * (1 - contrast);\n  for (let i = 0; i < arr.length; i += 4) {\n    //r,g,b,a\n    arr[i] = arr[i] * contrast + intercept;\n    arr[i + 1] = arr[i + 1] * contrast + intercept;\n    arr[i + 2] = arr[i + 2] * contrast + intercept;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\nOpenCV.prototype.brightnessCanvas = function(brightness) {\n  this.loadOriginalCanvas();\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  let imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  ctx.filter = `brightness(${brightness}%)`;\n  ctx.putImageData(imgData, 0, 0);\n};\n\nOpenCV.prototype.loadImageToCanvas = function() {\n  this.image.onload = function() {\n    let canvas = document.getElementById(\"image_canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(this, 0, 0, canvas.width, canvas.height);\n  };\n};\n\nOpenCV.prototype.loadOriginalCanvas = function() {\n  let canvas = document.getElementById(\"image_canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(this.image, 0, 0, canvas.width, canvas.height);\n};\n\n// convert image to grayscale\nOpenCV.prototype.grayscale = function() {\n  let mat = cv.imread(this.image);\n  cv.cvtColor(mat, mat, cv.COLOR_RGB2GRAY);\n  cv.imshow(\"image_canvas\", mat);\n  mat.delete();\n};\n\nOpenCV.prototype.filter = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  let M = cv.Mat.eye(3, 3, cv.CV_32FC1);\n  let anchor = new cv.Point(-1, -1);\n  cv.filter2D(src, dst, cv.CV_8U, M, anchor, 0, cv.BORDER_DEFAULT);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n  M.delete();\n};\n\nOpenCV.prototype.cannyEdgeDetection = function() {\n  this.loadOriginalCanvas();\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  cv.cvtColor(src, src, cv.COLOR_RGB2GRAY, 0);\n  // You can try more different parameters\n  cv.Canny(src, dst, 50, 100, 3, false);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\nOpenCV.prototype.houghLineTransformation = function() {\n  this.loadOriginalCanvas();\n  let src = cv.imread(this.image);\n  let dst = cv.Mat.zeros(src.rows, src.cols, cv.CV_8UC3);\n  let lines = new cv.Mat();\n  cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\n  cv.Canny(src, src, 50, 200, 3);\n  // You can try more different parameters\n  cv.HoughLines(src, lines, 1, Math.PI / 180, 30, 0, 0, 0, Math.PI);\n  // draw lines\n  for (let i = 0; i < lines.rows; ++i) {\n    let rho = lines.data32F[i * 2];\n    let theta = lines.data32F[i * 2 + 1];\n    let a = Math.cos(theta);\n    let b = Math.sin(theta);\n    let x0 = a * rho;\n    let y0 = b * rho;\n    let startPoint = { x: x0 - 1000 * b, y: y0 + 1000 * a };\n    let endPoint = { x: x0 + 1000 * b, y: y0 - 1000 * a };\n    cv.line(dst, startPoint, endPoint, [255, 0, 0, 255]);\n  }\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n  lines.delete();\n};\n\nOpenCV.prototype.dft = function() {\n  this.loadOriginalCanvas();\n  let src = cv.imread(this.image);\n  cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\n\n  // get optimal size of DFT\n  let optimalRows = cv.getOptimalDFTSize(src.rows);\n  let optimalCols = cv.getOptimalDFTSize(src.cols);\n  let s0 = cv.Scalar.all(0);\n  let padded = new cv.Mat();\n  cv.copyMakeBorder(\n    src,\n    padded,\n    0,\n    optimalRows - src.rows,\n    0,\n    optimalCols - src.cols,\n    cv.BORDER_CONSTANT,\n    s0\n  );\n\n  // use cv.MatVector to distribute space for real part and imaginary part\n  let plane0 = new cv.Mat();\n  padded.convertTo(plane0, cv.CV_32F);\n  let planes = new cv.MatVector();\n  let complexI = new cv.Mat();\n  let plane1 = new cv.Mat.zeros(padded.rows, padded.cols, cv.CV_32F);\n  planes.push_back(plane0);\n  planes.push_back(plane1);\n  cv.merge(planes, complexI);\n\n  // in-place dft transform\n  cv.dft(complexI, complexI);\n\n  // compute log(1 + sqrt(Re(DFT(img))**2 + Im(DFT(img))**2))\n  cv.split(complexI, planes);\n  cv.magnitude(planes.get(0), planes.get(1), planes.get(0));\n  let mag = planes.get(0);\n  let m1 = new cv.Mat.ones(mag.rows, mag.cols, mag.type());\n  cv.add(mag, m1, mag);\n  cv.log(mag, mag);\n\n  // crop the spectrum, if it has an odd number of rows or columns\n  let rect = new cv.Rect(0, 0, mag.cols & -2, mag.rows & -2);\n  mag = mag.roi(rect);\n\n  // rearrange the quadrants of Fourier image\n  // so that the origin is at the image center\n  let cx = mag.cols / 2;\n  let cy = mag.rows / 2;\n  let tmp = new cv.Mat();\n\n  let rect0 = new cv.Rect(0, 0, cx, cy);\n  let rect1 = new cv.Rect(cx, 0, cx, cy);\n  let rect2 = new cv.Rect(0, cy, cx, cy);\n  let rect3 = new cv.Rect(cx, cy, cx, cy);\n\n  let q0 = mag.roi(rect0);\n  let q1 = mag.roi(rect1);\n  let q2 = mag.roi(rect2);\n  let q3 = mag.roi(rect3);\n\n  // exchange 1 and 4 quadrants\n  q0.copyTo(tmp);\n  q3.copyTo(q0);\n  tmp.copyTo(q3);\n\n  // exchange 2 and 3 quadrants\n  q1.copyTo(tmp);\n  q2.copyTo(q1);\n  tmp.copyTo(q2);\n\n  // The pixel value of cv.CV_32S type image ranges from 0 to 1.\n  cv.normalize(mag, mag, 0, 1, cv.NORM_MINMAX);\n\n  cv.imshow(\"image_canvas\", mag);\n  src.delete();\n  padded.delete();\n  planes.delete();\n  complexI.delete();\n  m1.delete();\n  tmp.delete();\n};\n\nOpenCV.prototype.otsu = function(){\n  this.loadOriginalCanvas();\n  console.log(cv)\n  let src = cv.imread(this.image);\n  cv.cvtColor(src, src, cv.COLOR_RGB2GRAY, 0);\n  let dst = new cv.Mat();\n  // You can try more different parameters\n  cv.threshold(src, dst, 0, 12, cv.THRESH_OTSU);\n  cv.imshow('image_canvas', dst);\n  src.delete();\n  dst.delete();\n}\n\n\n// OpenCV.prototype.blur = function(type) {\n\n// }\n\nOpenCV.prototype.blurByAveraging = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  let ksize = new cv.Size(10, 10);\n  let anchor = new cv.Point(-1, -1);\n  cv.blur(src, dst, ksize, anchor, cv.BORDER_DEFAULT);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\nOpenCV.prototype.gaussianBlur = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  let ksize = new cv.Size(3, 3);\n  cv.GaussianBlur(src, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\nOpenCV.prototype.medianBlurring = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  cv.medianBlur(src, dst, 5);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\nOpenCV.prototype.negative = function() {\n  let mat = cv.imread(this.image);\n  let mat_not = new cv.Mat();\n  cv.bitwise_not(mat, mat_not);\n  cv.imshow(\"image_canvas\", mat_not);\n  mat.delete();\n  mat_not.delete();\n};\n\nOpenCV.prototype.histogram = function() {\n  let src = cv.imread(this.image);\n  cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\n  let srcVec = new cv.MatVector();\n  srcVec.push_back(src);\n  let accumulate = false;\n  let channels = [0];\n  let histSize = [256];\n  let ranges = [0, 255];\n  let hist = new cv.Mat();\n  let mask = new cv.Mat();\n  let color = new cv.Scalar(255, 255, 255);\n  let scale = 2;\n  // You can try more different parameters\n  cv.calcHist(srcVec, channels, mask, hist, histSize, ranges, accumulate);\n  let result = cv.minMaxLoc(hist, mask);\n  let max = result.maxVal;\n  let dst = new cv.Mat.zeros(src.rows, histSize[0] * scale, cv.CV_8UC3);\n  // draw histogram\n  for (let i = 0; i < histSize[0]; i++) {\n    let binVal = (hist.data32F[i] * src.rows) / max;\n    let point1 = new cv.Point(i * scale, src.rows - 1);\n    let point2 = new cv.Point((i + 1) * scale - 1, src.rows - binVal);\n    cv.rectangle(dst, point1, point2, color, cv.FILLED);\n  }\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n  srcVec.delete();\n  mask.delete();\n  hist.delete();\n};\n\nOpenCV.prototype.crop = function() {\n  let src = cv.imread(this.image);\n  let dst = new cv.Mat();\n  let rect = new cv.Rect(80, 80, 100, 100);\n  dst = src.roi(rect);\n  cv.imshow(\"image_canvas\", dst);\n  src.delete();\n  dst.delete();\n};\n\nOpenCV.prototype.action = function(type, value) {\n  if (this.image.src == \"\") {\n    return;\n  }\n  switch (type) {\n    case \"Original\":\n      this.loadOriginalCanvas();\n      break;\n    case \"Grayscale\":\n      this.grayscale();\n      break;\n    case \"Median Blur\":\n      this.medianBlurring();\n      break;\n    case \"Gaussian Blur\":\n      this.gaussianBlur();\n      break;\n    case \"Blur By Average\":\n      this.blurByAveraging();\n      break;\n\n    case \"Canny Edge Detection\":\n      this.cannyEdgeDetection();\n      break;\n    case \"Hough Line Transformation\":\n      this.houghLineTransformation();\n      break;\n    case \"Discrete Fourier Transformation\":\n      this.dft();\n      break;\n    case \"Otsu's Segmentation\":\n      this.otsu();\n      break;\n    case \"Histogram\":\n      this.histogram();\n      break;\n    case \"Filter\":\n      this.filter();\n      break;\n    case \"Crop\":\n      this.crop();\n      break;\n    case \"Negative\":\n      this.negativeCanvas();\n      break;\n    case \"Contrast\":\n      this.contrastCanvas(value);\n      break;\n    case \"Logarithm Transform\":\n      this.logTransform();\n      break;\n    case \"Brightness\":\n      this.brightnessCanvas(value);\n      break;\n    case \"Flip Horizontal\":\n      this.flip(true, false);\n      break;\n    case \"Mirror\":\n      this.flip(true, false);\n      break;\n    case \"Flip Vertical\":\n      this.flip(false, true);\n      break;\n    case \"Flip Horizontal and Vertical\":\n      this.flip(true, true);\n      break;\n    default:\n      break;\n  }\n};\n\nexport default OpenCV;\n","import React from \"react\";\n\nimport * as faceapi from \"face-api.js\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100%\"\n};\n\nconst VideoJSX = (props) => (\n  <div id=\"camera\" style={style}>\n    <video id=\"video\" width=\"720\" height=\"560\" autoPlay muted></video>\n    <p onClick={props.goBack} style={{fontSize:'12px', fontFamily:\"Source Sans Pro, Sans Serif\", cursor:\"pointer\"}}>Go Back to home</p>\n  </div>\n);\n\nclass FaceDetection extends React.Component {\n  componentDidMount() {\n    this.startDetection();\n  }\n  render() {\n    return <VideoJSX goBack={this.props.goBack}/>;\n  }\n}\n\nFaceDetection.prototype.startDetection = function() {\n  const video = document.getElementById(\"video\");\n  Promise.all([\n    faceapi.nets.tinyFaceDetector.loadFromUri(\"./models\"),\n    faceapi.nets.faceLandmark68Net.loadFromUri(\"./models\"),\n    faceapi.nets.faceRecognitionNet.loadFromUri(\"./models\"),\n    faceapi.nets.faceExpressionNet.loadFromUri(\"./models\")\n  ]).then(startVideo);\n\n  function startVideo() {\n    navigator.getUserMedia(\n      { video: {} },\n      stream => (video.srcObject = stream),\n      err => console.error(err)\n    );\n  }\n\n  video.addEventListener(\"play\", () => {\n    const canvas = faceapi.createCanvasFromMedia(video);\n    canvas.setAttribute(\"id\", \"face-detection-canvas\");\n    let camera = document.getElementById(\"camera\");\n    camera.append(canvas);\n    const displaySize = { width: video.width, height: video.height };\n    faceapi.matchDimensions(canvas, displaySize);\n    setInterval(async () => {\n      const detections = await faceapi\n        .detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n      canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n      faceapi.draw.drawDetections(canvas, resizedDetections);\n    }, 100);\n  });\n};\n\nexport default FaceDetection;\n","import React from \"react\";\nimport \"./app.sass\";\nimport OpenCV from \"./OpenCV\";\nimport FaceDetection from \"./FaceDetection\";\n\n//convert image to negative\n\nconst action = [\n  \"Original\",\n  \"Grayscale\",\n  \"Canny Edge Detection\",\n  \"Hough Line Transformation\",\n  \"Discrete Fourier Transformation\",\n  \"Face Detection\",\n  \"Otsu's Segmentation\",\n  \"Filter\",\n  \"Negative\",\n  \"Median Blur\",\n  \"Gaussian Blur\",\n  \"Blur By Average\",\n  \"Histogram\",\n  \"Mirror\",\n  \"Crop\",\n  \"Logarithm Transform\",\n  \"Flip Horizontal\",\n  \"Flip Vertical\",\n  \"Flip Horizontal and Vertical\"\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detect_faces: false\n    };\n  }\n\n  componentDidMount() {\n    this.ocv = new OpenCV(\"image_input\", \"file_input\", \"image_canvas\");\n    this.ocv.addListener();\n  }\n\n  componentWillUnmount() {\n    this.ocv.removeListener();\n  }\n\n  handleChange = e => {\n    // console.log(e.target.value)\n    if (e.target.value == \"Face Detection\") {\n      console.log(\"Detect Faces\");\n      this.setState({ detect_faces: true });\n      return 0;\n    }\n    this.ocv.action(e.target.value);\n  };\n\n  goBack = () => {\n    this.setState({detect_faces:false})\n  }\n\n  handleSlider = (e, type) => {\n    console.log(e.target.value, type);\n    this.ocv.action(type, e.target.value);\n  };\n  render() {\n    return this.state.detect_faces ? <FaceDetection goBack={this.goBack}/> : <AppJSX handleChange={this.handleChange} handleSlider={this.handleSlider}/>;\n  }\n}\n\nconst AppJSX = (props) => (\n  <div id=\"app_container\">\n    <div className=\"image_closet\">\n      <img id=\"image_input\" />\n      <video id=\"video\" width=\"300\" height=\"300\" style={{ display: \"none\" }} />\n      <input type=\"file\" id=\"file_input\" />\n    </div>\n\n    <div className=\"canvas_ground\">\n      <div className=\"canvas\">\n        <canvas id=\"image_canvas\"></canvas>\n        <div>\n          <label>Brightness</label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"300\"\n            className=\"slider\"\n            id=\"myRange\"\n            onChange={e => props.handleSlider(e, \"Brightness\")}\n          />\n        </div>\n        <div>\n          <label>Contrast</label>\n          <input\n            type=\"range\"\n            min=\"-100\"\n            max=\"100\"\n            className=\"slider\"\n            id=\"myRange\"\n            onChange={e => props.handleSlider(e, \"Contrast\")}\n          />\n        </div>\n        {/* <div>\n      <label>Zoom</label>\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"10\"\n        className=\"slider\"\n        id=\"myRange\"\n        onChange={e => this.handleSlider(e, \"Zoom\")}\n      />\n    </div> */}\n      </div>\n      <div className=\"image_processing\">\n        <h1>Image Processing</h1>\n        <div className=\"action_menu\">\n          {action.map((item, index) => (\n            <div key={index}>\n              <input\n                type=\"radio\"\n                name=\"action\"\n                value={item}\n                onChange={props.handleChange}\n              />\n              <label>{item}</label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n"],"sourceRoot":""}